
@model StayFit.Models.PostMessageDetailsViewModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}
<br /><br />
<span style="font-size:20px;color:#18bc9c"> <i class="glyphicon glyphicon-hand-left" style="color:darkcyan"></i> @Html.ActionLink("Back to Discussion Board", "PostsList")</span>
<br />

<br />
<hr style="border-top: 1px solid #ccc; background: transparent;">

<h1 style="font-size:45px;font-weight:500;font-style:initial;font-family:Georgia; color:#18bc9c">@Html.DisplayFor(model => model.postMessages.First().Post.Post_Title)</h1>

@foreach (var item in Model.postMessages)
{
    if (@Context.User.Identity.Name == item.ApplicationUser.UserName)
    {
        <div class="well">
            @*Html.DisplayFor(modelItem => item.Post_Message)*@
            @Html.Raw(item.Post_Message)
            <br />
            <div style="text-align:right;">
                <span style="font-weight:900; "><i class="glyphicon glyphicon-user" style="color:darkcyan"></i> @Html.DisplayFor(modelItem => item.ApplicationUser.Email)</span>
            </div>
            <div style="text-align:right;">
                <br />
                <button type="submit" class="btn btn-success btn-xs">Edit</button>&nbsp;&nbsp;&nbsp;
                <button type="submit" class="btn btn-danger btn-xs">Delete</button>
            </div>
        </div>
    }
    else
    {
        <div class="well">
            @*Html.DisplayFor(modelItem => item.Post_Message)*@
            @Html.Raw(item.Post_Message)
            <br />
            <div style="text-align:right;">
                <br />
                <span style="font-weight:900; "><i class="glyphicon glyphicon-user" style="color:darkcyan"></i> @Html.DisplayFor(modelItem => item.ApplicationUser.Email)</span>
            </div>

        </div>
    }
}


<!-- Button trigger modal -->
<button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModal">
    Comment On Discussion
</button>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.postMessages.First().Post.Post_Id)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title" id="exampleModalLabel" style="font-size:40px;font-weight:400;font-style:initial;font-family:Georgia; color:#18bc9c">Comments On Discussion</h1>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <p style="font-size:20px;font-weight:400;font-style:initial;font-family:Georgia; color:#18bc9c">Enter Your Comments Here:</p>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">

                            @Html.EditorFor(model => model.post_message, new { htmlAttributes = new { @class = "form-control", @id = "textArea" } })
                            @Html.ValidationMessageFor(model => model.post_message, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="form-group">

                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success" name="btn" value="@Model.postMessages.First().Post.Post_Id">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        tinymce.init({
            selector: '#textArea'
        });
    </script>

}
